{"version":3,"file":"static/js/949.2320e86c.chunk.js","mappings":"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","sources":["components/Api/Api.js","components/SearchOptions/SearchOptions.js","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.js","pages/Movie.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from 'axios';\nimport { Options } from 'components/SearchOptions/SearchOptions';\nconst apiKey = '?api_key=62c12a1369857be405b25f1458785604&language=en-US';\nexport const fetchMovies = async (searchQuery, searchMode) => {\n  let query = '';\n  switch (searchMode) {\n    case Options.TRENDING: {\n      query = '/trending/movie/week' + apiKey;\n      break;\n    }\n    case Options.DETAILS: {\n      query = '/movie/' + searchQuery + apiKey;\n      break;\n    }\n    case Options.CAST: {\n      query = '/movie/' + searchQuery + '/credits' + apiKey;\n      break;\n    }\n    case Options.REVIEWS: {\n      query = '/movie/' + searchQuery + '/reviews' + apiKey + '&page=1';\n\n      break;\n    }\n    case Options.QUERY: {\n      query =\n        '/search/movie' +\n        apiKey +\n        '&query=' +\n        searchQuery +\n        '&page=1&include_adult=false';\n\n      break;\n    }\n\n    default:\n      console.log(`Wrong command`);\n  }\n  const response = await axios.get(query);\n  return response;\n};\n","export const Options = {\n  TRENDING: 'TRENDING',\n  DETAILS: 'DETAILS',\n  CAST: 'CAST',\n  REVIEWS: 'REVIEWS',\n  QUERY: 'QUERY',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item-list\":\"MovieSearch_item-list__iFF97\",\"item\":\"MovieSearch_item__FDvop\",\"item-img\":\"MovieSearch_item-img__Z1D6s\"};","import React, { useEffect, useState, useRef } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport css from './MovieSearch.module.css';\nimport { Options } from 'components/SearchOptions/SearchOptions';\nimport { fetchMovies } from 'components/Api/Api';\nimport { Link } from 'components/AppStyled/App.styled';\nexport const MovieSearch = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const isFetching = useRef(false);\n  const imgPath = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2/';\n  const handleMoviesRequest = async (searchQuery, pageNr) => {\n    setIsLoading(true);\n    try {\n      const fetchData = await fetchMovies(searchQuery, pageNr);\n      const { results } = fetchData.data;\n\n      setMovies(results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    if (!isFetching.current) {\n      isFetching.current = true;\n      handleMoviesRequest(query, Options.QUERY);\n      isFetching.current = false;\n    }\n  }, [query]);\n  const handleChange = e => {\n    e.preventDefault();\n    const query = e.target.value;\n    setSearchParams({ query: query });\n  };\n  return (\n    <div>\n      {' '}\n      <input type={'text'} onChange={handleChange} />\n      {!isLoading && movies.length > 0 && (\n        <ul className={css['item-list']}>\n          {movies.map(movie => (\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <li className={css['item']} key={movie.id?.toString()}>\n                {movie.poster_path && (\n                  <img\n                    className={css['item-img']}\n                    src={imgPath + movie.poster_path}\n                    alt={movie.title}\n                  ></img>\n                )}{' '}\n                {!movie.poster_path && (\n                  <img\n                    className={css['item-img']}\n                    src={\n                      'https://media.comicbook.com/files/img/default-movie.png'\n                    }\n                    alt={movie.title}\n                  ></img>\n                )}\n                {movie.title}\n              </li>\n            </Link>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n//const TrendingMovies = lazy(() => import('components/Home/Home'));\nimport { MovieSearch } from 'components/MovieSearch/MovieSearch';\nconst Movie = () => {\n  return <MovieSearch />;\n};\nexport default Movie;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","fetchMovies","searchQuery","searchMode","query","Options","console","log","axios","response","TRENDING","DETAILS","CAST","REVIEWS","QUERY","MovieSearch","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useState","movies","setMovies","isLoading","setIsLoading","isFetching","useRef","handleMoviesRequest","pageNr","fetchData","results","data","error","useEffect","current","type","onChange","e","preventDefault","target","value","length","className","css","map","movie","to","id","state","from","poster_path","src","alt","title","toString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}