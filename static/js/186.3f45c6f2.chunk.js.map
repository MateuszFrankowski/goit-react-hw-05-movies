{"version":3,"file":"static/js/186.3f45c6f2.chunk.js","mappings":"sNAEMA,EAAS,2DACFC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yEACrBC,EAAQ,GADa,KAEjBD,EAFiB,cAGlBE,EAAAA,EAAAA,SAHkB,SAOlBA,EAAAA,EAAAA,QAPkB,SAWlBA,EAAAA,EAAAA,KAXkB,SAelBA,EAAAA,EAAAA,QAfkB,UAoBlBA,EAAAA,EAAAA,MApBkB,0BAIrBD,EAAQ,uBAAyBJ,EAJZ,mCAQrBI,EAAQ,UAAYF,EAAcF,EARb,mCAYrBI,EAAQ,UAAYF,EAAc,WAAaF,EAZ1B,oCAgBrBI,EAAQ,UAAYF,EAAc,WAAaF,EAAS,UAhBnC,oCAqBrBI,EACE,gBACAJ,EACA,UACAE,EACA,8BA1BmB,6BAgCrBI,QAAQC,IAAR,iBAhCqB,yBAkCFC,EAAAA,EAAAA,IAAUJ,GAlCR,eAkCnBK,EAlCmB,yBAmClBA,GAnCkB,4CAAH,uD,iHCoDxB,UAjDgB,WAAO,IAAD,IACpB,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKC,OAAOH,GACZI,EAA0B,mCAAG,WAAOnB,EAAaC,GAApB,gFACjCW,GAAa,GADoB,mBAGPb,EAAAA,EAAAA,GAAYC,EAAaC,GAHlB,OAGzBmB,EAHyB,OAIvBC,EAASD,EAATC,KACRjB,QAAQC,IAAI,mBAAoBe,GAChCV,EAAgBW,GANe,kDAQ/BjB,QAAQkB,MAAR,MAR+B,yBAU/BV,GAAa,GAVkB,6EAAH,wDAoBhC,OANAW,EAAAA,EAAAA,YAAU,WACHV,EAAUW,UACbL,EAA2BF,EAAId,EAAAA,EAAAA,SAC/BU,EAAUW,SAAU,EAEvB,KAEC,4BACG,UAAAf,EAAagB,eAAb,eAAsBC,QAAS,IAAMf,GAAaE,EAAUW,UAC3D,+BACE,kCACGf,EAAagB,eADhB,aACG,EAAsBE,KAAI,SAACC,EAAQC,GAAT,OACzB,2BACE,wBAAKD,EAAOE,UACZ,uBAAIF,EAAOG,WACX,uBAAIH,EAAOI,eAHJH,EADgB,QAUA,IAAhCpB,EAAagB,QAAQC,SAAiBf,GAAaE,EAAUW,UAC5D,+BACE,+EAKT,C,sDCtDM,IAAMrB,EAAU,CACrB8B,SAAU,WACVC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,Q,sBCLT,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzB,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Api/Api.js","components/Reviews/Reviews.jsx","components/SearchOptions/SearchOptions.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from 'axios';\nimport { Options } from 'components/SearchOptions/SearchOptions';\nconst apiKey = '?api_key=62c12a1369857be405b25f1458785604&language=en-US';\nexport const fetchMovies = async (searchQuery, searchMode) => {\n  let query = '';\n  switch (searchMode) {\n    case Options.TRENDING: {\n      query = '/trending/movie/week' + apiKey;\n      break;\n    }\n    case Options.DETAILS: {\n      query = '/movie/' + searchQuery + apiKey;\n      break;\n    }\n    case Options.CAST: {\n      query = '/movie/' + searchQuery + '/credits' + apiKey;\n      break;\n    }\n    case Options.REVIEWS: {\n      query = '/movie/' + searchQuery + '/reviews' + apiKey + '&page=1';\n\n      break;\n    }\n    case Options.QUERY: {\n      query =\n        '/search/movie' +\n        apiKey +\n        '&query=' +\n        searchQuery +\n        '&page=1&include_adult=false';\n\n      break;\n    }\n\n    default:\n      console.log(`Wrong command`);\n  }\n  const response = await axios.get(query);\n  return response;\n};\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport { Options } from 'components/SearchOptions/SearchOptions';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'components/Api/Api';\n\nconst Reviews = () => {\n  const [movieReviews, setmovieReviews] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const isFetched = useRef(false);\n  const { movieId } = useParams();\n  const id = Number(movieId);\n  const handleMoviesReviewsRequest = async (searchQuery, searchMode) => {\n    setIsLoading(true);\n    try {\n      const fetchData = await fetchMovies(searchQuery, searchMode);\n      const { data } = fetchData;\n      console.log('response rewiews', fetchData);\n      setmovieReviews(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!isFetched.current) {\n      handleMoviesReviewsRequest(id, Options.REVIEWS);\n      isFetched.current = true;\n    }\n  });\n  return (\n    <div>\n      {movieReviews.results?.length > 0 && !isLoading && isFetched.current && (\n        <>\n          <ul>\n            {movieReviews.results?.map((review, index) => (\n              <li key={index}>\n                <h6>{review.author}</h6>\n                <p>{review.content}</p>\n                <p>{review.created_at}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {movieReviews.results.length === 0 && !isLoading && isFetched.current && (\n        <>\n          <p>Sorry We doon't have any reviews for this movie</p>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","export const Options = {\n  TRENDING: 'TRENDING',\n  DETAILS: 'DETAILS',\n  CAST: 'CAST',\n  REVIEWS: 'REVIEWS',\n  QUERY: 'QUERY',\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["apiKey","fetchMovies","searchQuery","searchMode","query","Options","console","log","axios","response","useState","movieReviews","setmovieReviews","isLoading","setIsLoading","isFetched","useRef","movieId","useParams","id","Number","handleMoviesReviewsRequest","fetchData","data","error","useEffect","current","results","length","map","review","index","author","content","created_at","TRENDING","DETAILS","CAST","REVIEWS","QUERY","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}