{"version":3,"file":"static/js/933.e7272b2a.chunk.js","mappings":"sNAEMA,EAAS,2DACFC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,yEACrBC,EAAQ,GADa,KAEjBD,EAFiB,cAGlBE,EAAAA,EAAAA,SAHkB,SAOlBA,EAAAA,EAAAA,QAPkB,SAWlBA,EAAAA,EAAAA,KAXkB,SAelBA,EAAAA,EAAAA,QAfkB,UAoBlBA,EAAAA,EAAAA,MApBkB,0BAIrBD,EAAQ,uBAAyBJ,EAJZ,mCAQrBI,EAAQ,UAAYF,EAAcF,EARb,mCAYrBI,EAAQ,UAAYF,EAAc,WAAaF,EAZ1B,oCAgBrBI,EAAQ,UAAYF,EAAc,WAAaF,EAAS,UAhBnC,oCAqBrBI,EACE,gBACAJ,EACA,UACAE,EACA,8BA1BmB,6BAgCrBI,QAAQC,IAAR,iBAhCqB,yBAkCFC,EAAAA,EAAAA,IAAUJ,GAlCR,eAkCnBK,EAlCmB,yBAmClBA,GAnCkB,4CAAH,uD,sDCHjB,IAAMJ,EAAU,CACrBK,SAAU,WACVC,QAAS,UACTC,KAAM,OACNC,QAAS,UACTC,MAAO,Q,kKCDHC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0OAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,E,0BCsDD,EAzEqB,WAAO,IAAD,MACnBE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAAyCC,EAAAA,EAAAA,UAAS,CAAC,GAAnD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAKC,OAAOH,GACZI,EAAmB,mCAAG,WAAOpC,EAAaC,GAApB,gFAC1B4B,GAAa,GADa,mBAGA9B,EAAAA,EAAAA,GAAYC,EAAaC,GAHzB,OAGlBoC,EAHkB,OAIhBC,EAASD,EAATC,KAERX,EAAkBW,GANM,gDAQxBlC,QAAQmC,MAAR,MARwB,yBAUxBV,GAAa,GAVW,4EAAH,wDAqBzB,OAPAW,EAAAA,EAAAA,YAAU,WACHV,EAAUW,UACbL,EAAoBF,EAAI/B,EAAAA,EAAAA,SAExB2B,EAAUW,SAAU,EAEvB,KAEC,4BACE,+BACE,SAACzB,EAAD,CAAUC,GAAIK,EAAd,8BAEDI,IAAgBE,GAAaE,EAAUW,UACtC,iCACE,gBACEC,IAnCM,mCAmCShB,EAAYiB,cAC3BC,IAAKlB,EAAYmB,kBAEnB,wBAAKnB,EAAYmB,kBACjB,wCACeC,KAAKC,MAAOrB,EAAYsB,aAAe,GAAM,KAD5D,QAGA,sCACA,uBAAItB,EAAYuB,YAChB,oCACA,iCACGvB,EAAYwB,cADf,aACG,EAAoBC,KAAI,SAACC,EAAOC,GAAR,OACvB,4BAAyBD,EAAME,KAA/B,MAAWD,EAAQ,IADI,UAM/B,2BACE,0DACA,yBACE,SAAC,KAAD,CAAMpC,GAAG,OAAOM,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA9C,kCAIF,yBACE,SAAC,KAAD,CAAMP,GAAG,UAAUM,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAjD,wCAKJ,SAAC,KAAD,KACEE,IAAgBE,IAAa,uDAGpC,C","sources":["components/Api/Api.js","components/SearchOptions/SearchOptions.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Options } from 'components/SearchOptions/SearchOptions';\nconst apiKey = '?api_key=62c12a1369857be405b25f1458785604&language=en-US';\nexport const fetchMovies = async (searchQuery, searchMode) => {\n  let query = '';\n  switch (searchMode) {\n    case Options.TRENDING: {\n      query = '/trending/movie/week' + apiKey;\n      break;\n    }\n    case Options.DETAILS: {\n      query = '/movie/' + searchQuery + apiKey;\n      break;\n    }\n    case Options.CAST: {\n      query = '/movie/' + searchQuery + '/credits' + apiKey;\n      break;\n    }\n    case Options.REVIEWS: {\n      query = '/movie/' + searchQuery + '/reviews' + apiKey + '&page=1';\n\n      break;\n    }\n    case Options.QUERY: {\n      query =\n        '/search/movie' +\n        apiKey +\n        '&query=' +\n        searchQuery +\n        '&page=1&include_adult=false';\n\n      break;\n    }\n\n    default:\n      console.log(`Wrong command`);\n  }\n  const response = await axios.get(query);\n  return response;\n};\n","export const Options = {\n  TRENDING: 'TRENDING',\n  DETAILS: 'DETAILS',\n  CAST: 'CAST',\n  REVIEWS: 'REVIEWS',\n  QUERY: 'QUERY',\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { Outlet, Link, useLocation } from 'react-router-dom';\nimport { Options } from 'components/SearchOptions/SearchOptions';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'components/Api/Api';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const imgPath = 'https://image.tmdb.org/t/p/w500/';\n  const [movieDetail, setTrendingMovies] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const isFetched = useRef(false);\n  const { movieId } = useParams();\n  const id = Number(movieId);\n  const handleMoviesRequest = async (searchQuery, searchMode) => {\n    setIsLoading(true);\n    try {\n      const fetchData = await fetchMovies(searchQuery, searchMode);\n      const { data } = fetchData;\n\n      setTrendingMovies(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!isFetched.current) {\n      handleMoviesRequest(id, Options.DETAILS);\n\n      isFetched.current = true;\n    }\n  });\n  return (\n    <div>\n      <>\n        <BackLink to={backLinkHref}>Back to movies</BackLink>\n      </>\n      {movieDetail && !isLoading && isFetched.current && (\n        <>\n          <img\n            src={imgPath + movieDetail.backdrop_path}\n            alt={movieDetail.original_title}\n          ></img>\n          <h1>{movieDetail.original_title}</h1>\n          <p>\n            User score: {Math.round((movieDetail.vote_average / 10) * 100)}%\n          </p>\n          <h3>Overview</h3>\n          <p>{movieDetail.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movieDetail.genres?.map((genre, index) => (\n              <span key={index + 100}>{genre.name} </span>\n            ))}\n          </p>\n        </>\n      )}\n      <ul>\n        <>Additional information</>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Check the credits\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Read some rewiews...\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n      {!movieDetail && !isLoading && <h2>Sorry, project not found</h2>}\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["apiKey","fetchMovies","searchQuery","searchMode","query","Options","console","log","axios","response","TRENDING","DETAILS","CAST","REVIEWS","QUERY","StyledLink","styled","Link","BackLink","to","children","size","location","useLocation","backLinkHref","state","from","useState","movieDetail","setTrendingMovies","isLoading","setIsLoading","isFetched","useRef","movieId","useParams","id","Number","handleMoviesRequest","fetchData","data","error","useEffect","current","src","backdrop_path","alt","original_title","Math","round","vote_average","overview","genres","map","genre","index","name"],"sourceRoot":""}